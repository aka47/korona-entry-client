=begin
#KORONA.entry API v1

#Our api provides access to our entry services

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

# Common files
require 'korona-entry-client/api_client'
require 'korona-entry-client/api_error'
require 'korona-entry-client/version'
require 'korona-entry-client/configuration'

# Models
require 'korona-entry-client/models/bad_request_error'
require 'korona-entry-client/models/entry_response'
require 'korona-entry-client/models/external_ticket_configuration'
require 'korona-entry-client/models/external_ticket_configuration_list'
require 'korona-entry-client/models/model_reference'
require 'korona-entry-client/models/not_acceptable_error'
require 'korona-entry-client/models/organizational_unit'
require 'korona-entry-client/models/organizational_unit_list'
require 'korona-entry-client/models/ticket'
require 'korona-entry-client/models/ticket_entry'
require 'korona-entry-client/models/ticket_entry_log'
require 'korona-entry-client/models/ticket_entry_log_list'
require 'korona-entry-client/models/ticket_image'
require 'korona-entry-client/models/ticket_information'
require 'korona-entry-client/models/ticket_list'
require 'korona-entry-client/models/ticket_personalization'

# APIs
require 'korona-entry-client/api/external_ticket_configurations_api'
require 'korona-entry-client/api/organizational_units_api'
require 'korona-entry-client/api/tickets_api'

module KoronaEntryClient
  class << self
    # Customize default settings for the SDK using block.
    #   KoronaEntryClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
