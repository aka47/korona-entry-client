=begin
#KORONA.entry API v1

#Our api provides access to our entry services

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for KoronaEntryClient::TicketEntryLog
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TicketEntryLog' do
  before do
    # run before each test
    @instance = KoronaEntryClient::TicketEntryLog.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TicketEntryLog' do
    it 'should create an instance of TicketEntryLog' do
      expect(@instance).to be_instance_of(KoronaEntryClient::TicketEntryLog)
    end
  end
  describe 'test attribute "id"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "comment"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "ticket"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "ticket_entry"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "log_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["CREATE", "UPDATE", "EXTEND", "VALIDATE", "PREPARE_ENTRY", "COMMIT_ENTRY"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.log_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "response"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["BEFORETIME", "DENIED", "DOESNTEXIST", "EXHAUSTED", "INVALID", "LOCKED", "SUSPENDED", "TIMEUP", "TIME_QUOTA_OVERDRAWN", "SUCCESS"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.response = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "time"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "organizational_unit_number"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "client"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "number_of_uses"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "commit_type"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["ACCESS", "EXIT"])
      # validator.allowable_values.each do |value|
      #   expect { @instance.commit_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "test_time"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
