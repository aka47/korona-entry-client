=begin
#KORONA.entry API v1

#Our api provides access to our entry services

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0

=end

require 'spec_helper'
require 'json'

# Unit tests for KoronaEntryClient::TicketsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TicketsApi' do
  before do
    # run before each test
    @api_instance = KoronaEntryClient::TicketsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TicketsApi' do
    it 'should create an instance of TicketsApi' do
      expect(@api_instance).to be_instance_of(KoronaEntryClient::TicketsApi)
    end
  end

  # unit tests for check_ticket
  # Checks a ticket. The entry can optionally also be committed.
  # @param client Identification of executing client.
  # @param ticket_number Ticket number to be checked.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :commit_entry True if entry should be committed.
  # @option opts [String] :commit_type 
  # @option opts [String] :organizational_unit_number Number of organizational unit.
  # @option opts [DateTime] :time The time to be checked. *Now* if not specified further.
  # @option opts [Integer] :number_of_uses Number of uses. *1* if not specified further.
  # @return [EntryResponse]
  describe 'check_ticket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_ticket
  # Creates a new ticket.
  # @param client Identification of executing client.
  # @param body Properties to update of the ticket.
  # @param [Hash] opts the optional parameters
  # @return [ModelReference]
  describe 'create_ticket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_image
  # Deletes the owners image of the ticket.
  # @param client Identification of executing client.
  # @param ticket_id ID to identify the ticket.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ticket
  # Deletes the single ticket.
  # @param client Identification of executing client.
  # @param ticket_id ID to identify the ticket.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_ticket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_image
  # Returns the owners image of the ticket
  # @param client Identification of executing client.
  # @param ticket_id ID to identify the ticket.
  # @param [Hash] opts the optional parameters
  # @return [TicketImage]
  describe 'get_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_logs
  # Returns the log for a optional single ticket and/or organizational unit
  # @param client Identification of executing client.
  # @param time_from Log time from.
  # @param time_to Log time to.
  # @param log_types Restrict the logs to specific log events.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ticket_number Optional filter to restrict the logs to actions to the specified ticket.
  # @option opts [String] :organizational_unit_number Optional filter to restrict the logs to actions within the specified organizational unit.
  # @return [TicketEntryLogList]
  describe 'get_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ticket
  # Returns the single ticket.
  # @param client Identification of executing client.
  # @param ticket_id ID to identify the ticket.
  # @param [Hash] opts the optional parameters
  # @return [Ticket]
  describe 'get_ticket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ticket_entry
  # Returns a single ticket entry.
  # @param client Identification of executing client.
  # @param ticket_id ID to identify the ticket.
  # @param ticket_entry_id ID to identify the ticket entry of the ticket.
  # @param [Hash] opts the optional parameters
  # @return [TicketEntry]
  describe 'get_ticket_entry test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_tickets
  # Lists all tickets.
  # @param client Identification of executing client.
  # @param offset Position in the dataset to start to retrieve.
  # @param page_size Amount of objects to return per page.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :ticket_number Restrict the list for a specific ticket number
  # @option opts [DateTime] :create_date_from Restrict the list for begin of creation date.
  # @option opts [DateTime] :create_date_to Restrict the list for end of creation date.
  # @option opts [DateTime] :deactivation_date_from Restrict the list for start of deactivation date.
  # @option opts [DateTime] :deactivation_date_to Restrict the list for end of deactivation date.
  # @option opts [Boolean] :locked Restrict the list for locked tickets.
  # @option opts [DateTime] :locked_to_date_from Restrict the list for for locked tickets.
  # @option opts [DateTime] :locked_to_date_to Restrict the list for for locked tickets.
  # @option opts [String] :personalization_customer_number Restrict the list for tickets owned by customers with specific customer number.
  # @option opts [String] :personalization_lastname Restrict the list for tickets owned by customers with specific last name.
  # @option opts [String] :personalization_firstname Restrict the list for tickets owned by customers with specific first name.
  # @return [TicketList]
  describe 'get_tickets test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_image
  # Updates the owners image of the ticket
  # @param client Identification of executing client.
  # @param ticket_id ID to identify the ticket.
  # @param body Properties to update of the image.
  # @param [Hash] opts the optional parameters
  # @return [ModelReference]
  describe 'update_image test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_ticket
  # Updates the single ticket.
  # @param client Identification of executing client.
  # @param ticket_id ID to identify the ticket.
  # @param body Properties to update of the ticket.
  # @param [Hash] opts the optional parameters
  # @return [ModelReference]
  describe 'update_ticket test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
