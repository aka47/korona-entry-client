{"swagger":"2.0","info":{"description":"Our api provides access to our entry services","version":"1.0.0","title":"KORONA.entry API v1","contact":{"name":"support@combase.net"},"license":{"name":"KORONA.entry API License","url":"https://support.korona.de/agb/"}},"host":"YourLocalInstance.com","basePath":"/korona.entry/services/v1","tags":[{"name":"external ticket configurations"},{"name":"organizational units"},{"name":"statistics"},{"name":"tickets"}],"schemes":["https"],"paths":{"/{client}/externalTicketConfigurations":{"get":{"tags":["external ticket configurations"],"summary":"Returns all external ticket configurations","operationId":"getExternalTicketConfigurations","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/ExternalTicketConfigurationList"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}}},"security":[{}]},"post":{"tags":["external ticket configurations"],"summary":"Creates a new external ticket configuration. If an unkown ticket number will be checked and the pattern of the ticket number will be equals to a pattern of a external ticket configuration, a new ticket will be created. The TicketEntry of the external ticket configuration will be copied and adjusted to the new ticket. The newly created ticket is then checked for validity.","operationId":"createExternalTicketConfigurations","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"in":"body","name":"body","description":"Properties to update of the external ticket configuration.","required":true,"schema":{"$ref":"#/definitions/ExternalTicketConfiguration"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ModelReference"}},"201":{"description":"Created: Object successfully created.","schema":{"$ref":"#/definitions/ModelReference"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}}},"security":[{}]}},"/{client}/externalTicketConfigurations/{externalTicketConfigurationId}":{"get":{"tags":["external ticket configurations"],"summary":"Returns the external ticket configuration.","operationId":"getExternalTicketConfiguration","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"externalTicketConfigurationId","in":"path","description":"ID to identify the external ticket configuration.","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/ExternalTicketConfiguration"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: External ticket configuration not found / does not exist."}},"security":[{}]},"delete":{"tags":["external ticket configurations"],"summary":"Deletes the single external ticket configuration.","operationId":"deleteExternalTicketConfiguration","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"externalTicketConfigurationId","in":"path","description":"ID to identify the external ticket configuration.","required":true,"type":"integer","format":"int64"}],"responses":{"204":{"description":"No Content: Successful operation, delete on single resource does not return any content."},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: External ticket configuration not found / does not exist."}},"security":[{}]},"patch":{"tags":["external ticket configurations"],"summary":"Updates the single external ticket configuration.","operationId":"updateExternalTicketConfiguration","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"externalTicketConfigurationId","in":"path","description":"ID to identify the external ticket configuration.","required":true,"type":"integer","format":"int64"},{"in":"body","name":"body","description":"Properties to update of the external ticket configuration.","required":true,"schema":{"$ref":"#/definitions/ExternalTicketConfiguration"}}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/ModelReference"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: External ticket configuration not found / does not exist."}},"security":[{}]}},"/{client}/organizationalUnits":{"get":{"tags":["organizational units"],"summary":"Returns all organizational unit","operationId":"getOrganizationalUnits","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/OrganizationalUnitList"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}}},"security":[{}]},"post":{"tags":["organizational units"],"summary":"Creates a new organizational unit.","operationId":"createOrganizationalUnit","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"in":"body","name":"body","description":"Properties to update of the organizational unit.","required":true,"schema":{"$ref":"#/definitions/OrganizationalUnit"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ModelReference"}},"201":{"description":"Created: Object successfully created.","schema":{"$ref":"#/definitions/ModelReference"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}}},"security":[{}]}},"/{client}/organizationalUnits/{organizationalUnitId}":{"get":{"tags":["organizational units"],"summary":"Returns the single organizational unit.","operationId":"getOrganizationalUnit","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"organizationalUnitId","in":"path","description":"ID to identify the organizational unit.","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/OrganizationalUnit"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Organizational unit not found / does not exist."}},"security":[{}]},"delete":{"tags":["organizational units"],"summary":"Deletes the single organizational unit.","operationId":"deleteOrganizationalUnit","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"organizationalUnitId","in":"path","description":"ID to identify the organizational unit.","required":true,"type":"integer","format":"int64"}],"responses":{"204":{"description":"No Content: Successful operation, delete on single resource does not return any content."},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Organizational unit not found / does not exist."}},"security":[{}]},"patch":{"tags":["organizational units"],"summary":"Updates the single organizational unit.","operationId":"updateOrganizationalUnit","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"organizationalUnitId","in":"path","description":"ID to identify the organizational unit.","required":true,"type":"integer","format":"int64"},{"in":"body","name":"body","description":"Properties to update of the organizational unit.","required":true,"schema":{"$ref":"#/definitions/OrganizationalUnit"}}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/ModelReference"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Organizational unit not found / does not exist."}},"security":[{}]}},"/{client}/statistics/groupedEntries":{"get":{"tags":["statistics"],"summary":"Prepares entries statistically and returns them as a list.","operationId":"loadGroupedEntries","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"timeFrom","in":"query","description":"Log time from.","required":true,"type":"string","format":"date-time"},{"name":"timeTo","in":"query","description":"Log time to.","required":true,"type":"string","format":"date-time"},{"name":"organizationalUnitNumbers","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"tags","in":"query","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},{"name":"ticketType","in":"query","required":true,"type":"string","enum":["ALL_TICKETS","INTERNAL_TICKETS","EXTERNAL_TICKETS"]},{"name":"groupedEntriesType","in":"query","required":true,"type":"string","enum":["DAY","DAY_UNIQUE_TICKETS","HOUR","ENTRY_GATES"]}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"type":"array","items":{"$ref":"#/definitions/StatisticGroupedEntry"}}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}}},"security":[{}]}},"/{client}/checkTicket":{"get":{"tags":["tickets"],"summary":"Checks a ticket. The entry can optionally also be committed.","operationId":"checkTicket","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketNumber","in":"query","description":"Ticket number to be checked.","required":true,"type":"string"},{"name":"commitEntry","in":"query","description":"True if entry should be committed.","required":false,"type":"boolean"},{"name":"commitType","in":"query","required":false,"type":"string","enum":["ACCESS","EXIT"]},{"name":"organizationalUnitNumber","in":"query","description":"Number of organizational unit.","required":false,"type":"string"},{"name":"time","in":"query","description":"The time to be checked. *Now* if not specified further.","required":false,"type":"string","format":"date-time"},{"name":"numberOfUses","in":"query","description":"Number of uses. *1* if not specified further.","required":false,"type":"integer","format":"int32"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/EntryResponse"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."},"406":{"description":"Not Acceptable: Ticket is not valid / acceptable.","schema":{"$ref":"#/definitions/NotAcceptableError"}}},"security":[{}]}},"/{client}/tickets":{"get":{"tags":["tickets"],"summary":"Lists all tickets.","operationId":"getTickets","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"offset","in":"query","description":"Position in the dataset to start to retrieve.","required":true,"type":"integer","format":"int32"},{"name":"pageSize","in":"query","description":"Amount of objects to return per page.","required":true,"type":"integer","format":"int32"},{"name":"ticketNumber","in":"query","description":"Restrict the list for a specific ticket number","required":false,"type":"string"},{"name":"createDateFrom","in":"query","description":"Restrict the list for begin of creation date.","required":false,"type":"string","format":"date-time"},{"name":"createDateTo","in":"query","description":"Restrict the list for end of creation date.","required":false,"type":"string","format":"date-time"},{"name":"deactivationDateFrom","in":"query","description":"Restrict the list for start of deactivation date.","required":false,"type":"string","format":"date-time"},{"name":"deactivationDateTo","in":"query","description":"Restrict the list for end of deactivation date.","required":false,"type":"string","format":"date-time"},{"name":"locked","in":"query","description":"Restrict the list for locked tickets.","required":false,"type":"boolean"},{"name":"lockedToDateFrom","in":"query","description":"Restrict the list for for locked tickets.","required":false,"type":"string","format":"date-time"},{"name":"lockedToDateTo","in":"query","description":"Restrict the list for for locked tickets.","required":false,"type":"string","format":"date-time"},{"name":"personalizationCustomerNumber","in":"query","description":"Restrict the list for tickets owned by customers with specific customer number.","required":false,"type":"string"},{"name":"personalizationLastname","in":"query","description":"Restrict the list for tickets owned by customers with specific last name.","required":false,"type":"string"},{"name":"personalizationFirstname","in":"query","description":"Restrict the list for tickets owned by customers with specific first name.","required":false,"type":"string"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/TicketList"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."}},"security":[{}]},"post":{"tags":["tickets"],"summary":"Creates a new ticket.","operationId":"createTicket","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"in":"body","name":"body","description":"Properties to update of the ticket.","required":true,"schema":{"$ref":"#/definitions/Ticket"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ModelReference"}},"201":{"description":"Created: Object successfully created.","schema":{"$ref":"#/definitions/ModelReference"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}}},"security":[{}]}},"/{client}/tickets/{ticketId}":{"get":{"tags":["tickets"],"summary":"Returns the single ticket.","operationId":"getTicket","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/Ticket"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."}},"security":[{}]},"delete":{"tags":["tickets"],"summary":"Deletes the single ticket.","operationId":"deleteTicket","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"}],"responses":{"204":{"description":"No Content: Successful operation, delete on single resource does not return any content."},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."}},"security":[{}]},"patch":{"tags":["tickets"],"summary":"Updates the single ticket.","operationId":"updateTicket","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"},{"in":"body","name":"body","description":"Properties to update of the ticket.","required":true,"schema":{"$ref":"#/definitions/Ticket"}}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/ModelReference"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."}},"security":[{}]}},"/{client}/tickets/{ticketId}/image":{"get":{"tags":["tickets"],"summary":"Returns the owners image of the ticket","operationId":"getImage","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/TicketImage"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."}},"security":[{}]},"post":{"tags":["tickets"],"summary":"Updates the owners image of the ticket","operationId":"updateImage","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"},{"in":"body","name":"body","description":"Properties to update of the image.","required":true,"schema":{"$ref":"#/definitions/TicketImage"}}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/ModelReference"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."}},"security":[{}]},"delete":{"tags":["tickets"],"summary":"Deletes the owners image of the ticket.","operationId":"deleteImage","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"}],"responses":{"204":{"description":"No Content: Successful operation, delete on single resource does not return any content."},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."}},"security":[{}]}},"/{client}/tickets/{ticketId}/ticketEntries":{"post":{"tags":["tickets"],"summary":"Creates a new ticket entry for a specific ticket.","operationId":"createTicketEntry","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"},{"in":"body","name":"body","description":"Properties to update of the ticket entry.","required":true,"schema":{"$ref":"#/definitions/TicketEntry"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ModelReference"}},"201":{"description":"Created: Object successfully created.","schema":{"$ref":"#/definitions/ModelReference"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}}},"security":[{}]}},"/{client}/tickets/{ticketId}/ticketEntries/{ticketEntryId}":{"get":{"tags":["tickets"],"summary":"Returns a single ticket entry.","operationId":"getTicketEntry","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"},{"name":"ticketEntryId","in":"path","description":"ID to identify the ticket entry of the ticket.","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/TicketEntry"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."}},"security":[{}]},"delete":{"tags":["tickets"],"summary":"Deletes the single ticket entry (marks it as used up).","operationId":"deleteTicketEntry","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"},{"name":"ticketEntryId","in":"path","description":"ID to identify the ticket entry of the ticket.","required":true,"type":"integer","format":"int64"}],"responses":{"204":{"description":"No Content: Successful operation, delete on single resource does not return any content."},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket or ticket entry not found / does not exist."}},"security":[{}]},"patch":{"tags":["tickets"],"summary":"Updates the single ticket entry.","operationId":"updateTicketEntry","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"ticketId","in":"path","description":"ID to identify the ticket.","required":true,"type":"integer","format":"int64"},{"name":"ticketEntryId","in":"path","description":"ID to identify the ticket entry of the ticket.","required":true,"type":"integer","format":"int64"},{"in":"body","name":"body","description":"Properties to update of the ticket entry.","required":true,"schema":{"$ref":"#/definitions/TicketEntry"}}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/ModelReference"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket or ticket entry not found / does not exist."}},"security":[{}]}},"/{client}/ticketEntryLogs":{"get":{"tags":["tickets"],"summary":"Returns the log for a optional single ticket and/or organizational unit","operationId":"getLogs","consumes":["application/json"],"produces":["application/json"],"parameters":[{"name":"client","in":"path","description":"Identification of executing client.","required":true,"type":"string"},{"name":"timeFrom","in":"query","description":"Log time from.","required":true,"type":"string","format":"date-time"},{"name":"timeTo","in":"query","description":"Log time to.","required":true,"type":"string","format":"date-time"},{"name":"logTypes","in":"query","description":"Restrict the logs to specific log events.","required":true,"type":"array","items":{"type":"string","enum":["CREATE","UPDATE","EXTEND","VALIDATE","PREPARE_ENTRY","COMMIT_ENTRY"]},"collectionFormat":"multi"},{"name":"ticketNumber","in":"query","description":"Optional filter to restrict the logs to actions to the specified ticket.","required":false,"type":"string"},{"name":"organizationalUnitNumber","in":"query","description":"Optional filter to restrict the logs to actions within the specified organizational unit.","required":false,"type":"string"}],"responses":{"200":{"description":"OK: Successful operation.","schema":{"$ref":"#/definitions/TicketEntryLogList"}},"400":{"description":"Bad Request: Malformed querystring or model.","schema":{"$ref":"#/definitions/BadRequestError"}},"404":{"description":"Not Found: Ticket not found / does not exist."}},"security":[{}]}}},"securityDefinitions":{"basicAuth":{"description":"fill in your api username and password","type":"basic"}},"definitions":{"ModelReference":{"type":"object","properties":{"id":{"type":"integer","format":"int64","description":"Global object ID. Recommanded to use for linking purposes. Will never change."},"name":{"type":"string","description":"Name of object, insofar as available."},"number":{"type":"string","description":"Number of object, insofar as available."},"href":{"type":"string","description":"Link to object."}},"description":"Generic model for representation of id, number and name containing model purposes."},"BadRequestError":{"type":"object","properties":{"message":{"type":"string","description":"A short description of the error in english."},"code":{"type":"string","description":"The code for client-side evaluation of the error."}}},"ExternalTicketConfiguration":{"type":"object","properties":{"id":{"type":"integer","format":"int64","description":"Objects ID."},"number":{"type":"string","description":"Number of external ticket configuration."},"name":{"type":"string","description":"Name of external ticket configuration."},"pattern":{"type":"string","description":"Matching pattern for unkown external tickets."},"validFromPeriod":{"type":"string","description":"Adjusts the validFrom value of TicketEntry while ticket creation dynamically to the ticket creation time plus the period.","pattern":"^(-?)P(?=.)((\\d+)Y)?((\\d+)M)?((\\d+)D)?(T(?=.)((\\d+)H)?((\\d+)M)?(\\d*(\\.\\d+)?S)?)?$"},"validToPeriod":{"type":"string","description":"Adjusts the validTo value of TicketEntry while ticket creation dynamically to the ticket creation time plus the period.","pattern":"^(-?)P(?=.)((\\d+)Y)?((\\d+)M)?((\\d+)D)?(T(?=.)((\\d+)H)?((\\d+)M)?(\\d*(\\.\\d+)?S)?)?$"},"ticketEntries":{"type":"array","description":"Validities for this configuration of external tickets.","items":{"$ref":"#/definitions/TicketEntry"}}},"description":"The external ticket configuration."},"TicketEntry":{"type":"object","properties":{"id":{"type":"integer","format":"int64","description":"Objects ID."},"createDate":{"type":"string","format":"date-time","description":"Date of creation.","readOnly":true},"usedUp":{"type":"boolean","description":"*True*, if the ticket is used up."},"firstUse":{"type":"string","format":"date-time","description":"Date of first use.","readOnly":true},"lastUse":{"type":"string","format":"date-time","description":"Date of last use (not exiting).","readOnly":true},"lastExit":{"type":"string","format":"date-time","description":"Date of last exiting.","readOnly":true},"uses":{"type":"integer","format":"int64","description":"Number of entries already made.","readOnly":true},"usesMax":{"type":"integer","format":"int64","description":"Optional maximum number of possible entries."},"validFrom":{"type":"string","format":"date-time","description":"When the ticket becomes valid."},"validTo":{"type":"string","format":"date-time","description":"Optional fixed date until which the ticket is valid."},"validFromTime":{"type":"string","description":"Time from which the ticket becomes valid within a day. Format: HH:ii:ss","pattern":"^([0-1]\\d|2[0-3])\\:[0-5]\\d\\:[0-5]\\d$"},"validToTime":{"type":"string","description":"Time until which the ticket becomes valid within a day. Format: HH:ii:ss","pattern":"^([0-1]\\d|2[0-3])\\:[0-5]\\d\\:[0-5]\\d$"},"lockAfterUse":{"type":"integer","format":"int64","description":"Specifies the number of days after which the ticket is locked from the first use."},"entryGates":{"type":"array","description":"Number of access points to which this validity applies.","items":{"type":"string"}},"information":{"description":"Informations of the ticket represents by this TicketEntry.","$ref":"#/definitions/TicketInformation"},"lockedTo":{"type":"string","format":"date-time","description":"Date until which the ticketEntry is locked."},"reEntryLock":{"type":"integer","format":"int64","description":"Specifies how many seconds the ticket should be locked after a successful entry."},"lockForPeriodAfterUse":{"type":"string","description":"Specifies a time period after which the ticket is locked from the first use. The standard ISO 8601 format is used - PyYmMwWdDThHmMsS. Note that weeks should not be shown if any other field is present and vice versa."}},"description":"Represents a validity/definition of a ticket. each ticket can have more than one validity."},"TicketInformation":{"type":"object","properties":{"tag":{"type":"string","description":"Optional information to categorize tickets by entries."},"countStatistically":{"type":"boolean","description":"Optional information. *True*, if an access by this TicketEntry should count statistically (f.e. customers or employees)."},"ticketValue":{"type":"number","description":"Optional information that represents the sale value of this TicketEntry."},"entrySignal":{"type":"string","description":"Optional information for the presentation of the ticket by this entry."},"productNumber":{"type":"string","description":"Number of the associated article."},"receiptNumber":{"type":"string","description":"Number of the receipt by which the ticket was created."}},"description":"Informations of the ticket represents by this TicketEntry."},"ExternalTicketConfigurationList":{"type":"object","required":["externalTicketConfigurations"],"properties":{"externalTicketConfigurations":{"type":"array","items":{"$ref":"#/definitions/ExternalTicketConfiguration"}}},"description":"Represents a list of external ticket configurations."},"OrganizationalUnit":{"type":"object","properties":{"id":{"type":"integer","format":"int64","description":"Objects ID."},"number":{"type":"string","description":"Number of organizational unit."},"name":{"type":"string","description":"Name of organizational unit."},"entryGate":{"type":"boolean","description":"*True*, if this organizational unit is an entry gate."},"hasChildren":{"type":"boolean","description":"*True*, if this organizational unit has children."},"parent":{"description":"Parent organizational unit in the hierarchy.","$ref":"#/definitions/ModelReference"}},"description":"Defines the organizational structure of the entry gates/acces points."},"OrganizationalUnitList":{"type":"object","required":["organizationalUnits"],"properties":{"organizationalUnits":{"type":"array","items":{"$ref":"#/definitions/OrganizationalUnit"}}},"description":"Represents a list of organizational units."},"StatisticGroupedEntry":{"type":"object","properties":{"articleNumber":{"type":"string"},"year":{"type":"integer","format":"int32"},"month":{"type":"integer","format":"int32"},"day":{"type":"integer","format":"int32"},"hour":{"type":"integer","format":"int32"},"commitType":{"type":"string","enum":["ACCESS","EXIT"]},"entries":{"type":"integer","format":"int64"},"tickets":{"type":"integer","format":"int64"},"organizationalUnitNumber":{"type":"string"},"tag":{"type":"string"}}},"EntryResponse":{"type":"object","properties":{"ticket":{"description":"The ticket used.","$ref":"#/definitions/ModelReference"},"ticketEntry":{"description":"The ticket entry used.","$ref":"#/definitions/ModelReference"},"validToMax":{"type":"string","format":"date-time","description":"maximum validity end date calculated."}},"description":"Defines a successful response object. Contains the ticket, the used validity (ticketEntry) and the calculated maximum validity end date."},"NotAcceptableError":{"type":"object","properties":{"message":{"type":"string","description":"A short description of the error in english."},"response":{"type":"string","enum":["BEFORETIME","DENIED","DOESNTEXIST","EXHAUSTED","INVALID","LOCKED","SUSPENDED","TIMEUP","TIME_QUOTA_OVERDRAWN","SUCCESS"]}}},"Ticket":{"type":"object","properties":{"id":{"type":"integer","format":"int64","description":"Objects ID."},"number":{"type":"string","description":"Tickets number. If null, number will be generated."},"locked":{"type":"boolean","description":"*True*, if ticket is generally locked."},"lockedTo":{"type":"string","format":"date-time","description":"Set, if ticket is temporarily locked until the specified date. Indiependent of *locked* property."},"createDate":{"type":"string","format":"date-time","description":"Date of creation.","readOnly":true},"ticketEntries":{"type":"array","description":"Validities for this ticket.","items":{"$ref":"#/definitions/TicketEntry"}},"personalization":{"description":"Personalization of ticket.","$ref":"#/definitions/TicketPersonalization"},"active":{"type":"boolean","description":"Indicates whether the object is active for use or not.","readOnly":true},"deactivationDate":{"type":"string","format":"date-time","description":"Date of deactivation.","readOnly":true},"externalTicket":{"type":"boolean","description":"Indicates whether the ticket is created by external ticket configuration.","readOnly":true}},"description":"Central resource, identification by number (f.e. barcode on ticket card). A ticket can be personalized and it can have multiple validities/definitions."},"TicketPersonalization":{"type":"object","properties":{"firstname":{"type":"string","description":"Frist name of ticket owner."},"lastname":{"type":"string","description":"Last name of ticket owner."},"customerNumber":{"type":"string","description":"Customer number of ticket owner."}},"description":"Personalization of ticket."},"TicketEntryLog":{"type":"object","properties":{"id":{"type":"integer","format":"int64","description":"Objects ID."},"comment":{"type":"string","description":"Short comment for this action."},"ticket":{"description":"Ticket concerned.","$ref":"#/definitions/ModelReference"},"ticketEntry":{"description":"Ticket entry concerned, if its an successful access.","$ref":"#/definitions/ModelReference"},"logType":{"type":"string","description":"Identification of action type.","enum":["CREATE","UPDATE","EXTEND","VALIDATE","PREPARE_ENTRY","COMMIT_ENTRY"]},"response":{"type":"string","description":"Identification of response type.","enum":["BEFORETIME","DENIED","DOESNTEXIST","EXHAUSTED","INVALID","LOCKED","SUSPENDED","TIMEUP","TIME_QUOTA_OVERDRAWN","SUCCESS"]},"time":{"type":"string","format":"date-time","description":"Time of action."},"organizationalUnitNumber":{"type":"string","description":"Number of the organizational unit concerned."},"client":{"type":"string","description":"Client concerned."},"numberOfUses":{"type":"integer","format":"int32","description":"Number of uses if its an entry action."},"commitType":{"type":"string","description":"Identification of commit type.","enum":["ACCESS","EXIT"]}},"description":"Represents a tickte log entry, f.e. created by update, check or access."},"TicketEntryLogList":{"type":"object","required":["ticketEntryLogs"],"properties":{"ticketEntryLogs":{"type":"array","items":{"$ref":"#/definitions/TicketEntryLog"}}},"description":"Represents a list of ticket entry logs."},"TicketList":{"type":"object","required":["tickets"],"properties":{"tickets":{"type":"array","items":{"$ref":"#/definitions/Ticket"}}},"description":"Represents a list of tickets."},"TicketImage":{"type":"object","required":["data"],"properties":{"data":{"type":"array","description":"The image data.","items":{"type":"string","format":"byte"}}},"description":"Image of ticket owner."}}}